openapi: 3.0.0
info:
  title: Remove Stock API
  description: API endpoint for removing stock from a component at a specific location
  version: 1.0.0

paths:
  /api/v1/components/{component_id}/stock/remove:
    post:
      summary: Remove stock from a component
      description: |
        Removes stock from a specific component at a designated storage location.
        This operation creates a StockTransaction audit record and updates the
        ComponentLocation quantity. If all stock is removed from a location,
        the ComponentLocation record is deleted.

        **Admin Only**: Requires admin role authentication.

        **Auto-Capping**: If requested quantity exceeds available stock, the system
        automatically caps the removal at available quantity (FR-017).

        **Atomicity**: Operation is atomic - all changes succeed or all fail.

        **Locking**: Acquires pessimistic lock on source ComponentLocation during operation.
      operationId: removeStock
      tags:
        - Stock Operations
      security:
        - bearerAuth: []
      parameters:
        - name: component_id
          in: path
          required: true
          description: UUID of the component to remove stock from
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location_id
                - quantity
              properties:
                location_id:
                  type: string
                  format: uuid
                  description: UUID of the storage location to remove stock from
                  example: "660e8400-e29b-41d4-a716-446655440001"
                quantity:
                  type: integer
                  minimum: 1
                  description: |
                    Quantity of stock to remove (must be positive).
                    Will be auto-capped at available quantity if exceeding stock.
                  example: 30
                comments:
                  type: string
                  nullable: true
                  description: Optional comments explaining the stock removal
                  example: "Used in prototype build #42"
                reason:
                  type: string
                  nullable: true
                  description: Reason for stock removal (e.g., "used", "damaged", "lost")
                  example: "used"
            examples:
              simple_removal:
                summary: Simple stock removal
                value:
                  location_id: "660e8400-e29b-41d4-a716-446655440001"
                  quantity: 25
                  comments: "Used in Project Alpha assembly"
              removal_with_reason:
                summary: Removal with explicit reason
                value:
                  location_id: "660e8400-e29b-41d4-a716-446655440001"
                  quantity: 10
                  reason: "damaged"
                  comments: "Damaged during handling - discarded"
              remove_all:
                summary: Remove all available stock
                value:
                  location_id: "660e8400-e29b-41d4-a716-446655440001"
                  quantity: 100
                  comments: "Clearing location for reorganization"
      responses:
        '200':
          description: Stock removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Stock removed successfully"
                  transaction_id:
                    type: string
                    format: uuid
                    description: ID of created StockTransaction record
                    example: "770e8400-e29b-41d4-a716-446655440002"
                  component_id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  location_id:
                    type: string
                    format: uuid
                    example: "660e8400-e29b-41d4-a716-446655440001"
                  quantity_removed:
                    type: integer
                    description: Actual quantity removed (may be less than requested if auto-capped)
                    example: 30
                  requested_quantity:
                    type: integer
                    description: Originally requested quantity
                    example: 50
                  capped:
                    type: boolean
                    description: True if quantity was auto-capped due to insufficient stock
                    example: true
                  previous_quantity:
                    type: integer
                    description: Stock quantity at location before removal
                    example: 30
                  new_quantity:
                    type: integer
                    description: Stock quantity at location after removal (0 if location deleted)
                    example: 0
                  location_deleted:
                    type: boolean
                    description: True if ComponentLocation was deleted (quantity reached 0)
                    example: true
                  total_stock:
                    type: integer
                    description: Total component stock across all locations
                    example: 120
              examples:
                normal_removal:
                  summary: Normal stock removal
                  value:
                    success: true
                    message: "Stock removed successfully"
                    transaction_id: "770e8400-e29b-41d4-a716-446655440002"
                    component_id: "550e8400-e29b-41d4-a716-446655440000"
                    location_id: "660e8400-e29b-41d4-a716-446655440001"
                    quantity_removed: 25
                    requested_quantity: 25
                    capped: false
                    previous_quantity: 50
                    new_quantity: 25
                    location_deleted: false
                    total_stock: 125
                auto_capped_removal:
                  summary: Auto-capped removal (requested more than available)
                  value:
                    success: true
                    message: "Stock removed successfully (quantity auto-capped at available stock)"
                    transaction_id: "770e8400-e29b-41d4-a716-446655440003"
                    component_id: "550e8400-e29b-41d4-a716-446655440000"
                    location_id: "660e8400-e29b-41d4-a716-446655440001"
                    quantity_removed: 30
                    requested_quantity: 50
                    capped: true
                    previous_quantity: 30
                    new_quantity: 0
                    location_deleted: true
                    total_stock: 100
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Error message describing validation failure
              examples:
                invalid_quantity:
                  summary: Negative or zero quantity
                  value:
                    detail: "Quantity must be positive (minimum: 1)"
                no_stock_at_location:
                  summary: Location has no stock
                  value:
                    detail: "No stock available at this location"
        '403':
          description: Forbidden - user lacks admin privileges
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Admin privileges required for stock operations"
        '404':
          description: Not found - component or location does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
              examples:
                component_not_found:
                  summary: Component not found
                  value:
                    detail: "Component not found"
                location_not_found:
                  summary: ComponentLocation not found
                  value:
                    detail: "Component not found at specified location"
        '409':
          description: Conflict - resource locked by another operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Location is currently locked by another operation. Please try again."
              examples:
                lock_timeout:
                  summary: Lock acquisition timeout
                  value:
                    detail: "Location is currently locked by another operation. Please try again."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authentication token (admin role required)
