"""complete_database_schema_with_indexes

Revision ID: 8d9e6ce58998
Revises: 
Create Date: 2025-09-30 22:03:32.410230

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8d9e6ce58998'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.String(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], name=op.f('fk_categories_parent_id_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categories_name'), ['name'], unique=False)

    op.create_table('component_data_providers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('api_url', sa.String(length=500), nullable=False),
    sa.Column('api_key_encrypted', sa.Text(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_component_data_providers')),
    sa.UniqueConstraint('name', name='uq_provider_name'),
    sa.UniqueConstraint('name', name=op.f('uq_component_data_providers_name'))
    )
    op.create_table('custom_fields',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('field_type', sa.Enum('TEXT', 'NUMBER', 'BOOLEAN', 'DATE', 'URL', 'SELECT', 'MULTI_SELECT', name='fieldtype'), nullable=False),
    sa.Column('is_required', sa.String(), nullable=False),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('validation_rules', sa.Text(), nullable=True),
    sa.Column('options', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_custom_fields'))
    )
    with op.batch_alter_table('custom_fields', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_custom_fields_name'), ['name'], unique=False)

    op.create_table('meta_parts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('assembly_type', sa.String(length=100), nullable=True),
    sa.Column('reference_designator', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meta_parts')),
    sa.UniqueConstraint('name', 'version', name='uq_meta_part_name_version')
    )
    with op.batch_alter_table('meta_parts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_meta_parts_name'), ['name'], unique=False)

    op.create_table('projects',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PLANNING', 'ACTIVE', 'ON_HOLD', 'COMPLETED', 'CANCELLED', name='projectstatus'), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('client_project_id', sa.String(length=100), nullable=True),
    sa.Column('budget_allocated', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('budget_spent', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('target_completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projects_name'), ['name'], unique=False)

    op.create_table('storage_locations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('parent_id', sa.String(), nullable=True),
    sa.Column('location_hierarchy', sa.String(length=500), nullable=False),
    sa.Column('qr_code_id', sa.String(length=50), nullable=True),
    sa.Column('location_code', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("type IN ('container', 'room', 'building', 'cabinet', 'drawer', 'shelf', 'bin')", name=op.f('ck_storage_locations_ck_storage_location_type_valid')),
    sa.ForeignKeyConstraint(['parent_id'], ['storage_locations.id'], name=op.f('fk_storage_locations_parent_id_storage_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storage_locations'))
    )
    with op.batch_alter_table('storage_locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_storage_locations_location_code'), ['location_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_storage_locations_location_hierarchy'), ['location_hierarchy'], unique=False)
        batch_op.create_index(batch_op.f('ix_storage_locations_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_storage_locations_qr_code_id'), ['qr_code_id'], unique=True)

    op.create_table('suppliers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_suppliers')),
    sa.UniqueConstraint('name', name='uq_supplier_name'),
    sa.UniqueConstraint('name', name=op.f('uq_suppliers_name'))
    )
    op.create_table('tags',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('is_system_tag', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags'))
    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tags_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('hashed_password', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('must_change_password', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('api_tokens',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('hashed_token', sa.Text(), nullable=False),
    sa.Column('prefix', sa.String(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_tokens')),
    sa.UniqueConstraint('hashed_token', name=op.f('uq_api_tokens_hashed_token'))
    )
    op.create_table('components',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('local_part_id', sa.String(length=50), nullable=True),
    sa.Column('barcode_id', sa.String(length=50), nullable=True),
    sa.Column('manufacturer_part_number', sa.String(length=100), nullable=True),
    sa.Column('provider_sku', sa.String(length=100), nullable=True),
    sa.Column('part_number', sa.String(length=100), nullable=True),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('category_id', sa.String(), nullable=True),
    sa.Column('component_type', sa.String(length=50), nullable=True),
    sa.Column('value', sa.String(length=50), nullable=True),
    sa.Column('package', sa.String(length=50), nullable=True),
    sa.Column('average_purchase_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('total_purchase_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('specifications', sa.JSON(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('provider_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_components_category_id_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_components'))
    )
    with op.batch_alter_table('components', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_components_barcode_id'), ['barcode_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_components_component_type'), ['component_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_components_local_part_id'), ['local_part_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_components_manufacturer'), ['manufacturer'], unique=False)
        batch_op.create_index(batch_op.f('ix_components_manufacturer_part_number'), ['manufacturer_part_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_components_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_components_part_number'), ['part_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_components_provider_sku'), ['provider_sku'], unique=False)

    op.create_table('purchases',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('supplier_id', sa.String(), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=False),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('order_reference', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name=op.f('fk_purchases_supplier_id_suppliers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchases'))
    )
    op.create_table('attachments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('attachment_type', sa.String(length=50), nullable=True),
    sa.Column('is_primary_image', sa.Boolean(), nullable=False),
    sa.Column('thumbnail_path', sa.String(length=500), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_attachments_component_id_components')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attachments'))
    )
    op.create_table('component_locations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('storage_location_id', sa.String(), nullable=False),
    sa.Column('quantity_on_hand', sa.Integer(), nullable=False),
    sa.Column('quantity_ordered', sa.Integer(), nullable=False),
    sa.Column('minimum_stock', sa.Integer(), nullable=False),
    sa.Column('location_notes', sa.Text(), nullable=True),
    sa.Column('unit_cost_at_location', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_component_locations_component_id_components')),
    sa.ForeignKeyConstraint(['storage_location_id'], ['storage_locations.id'], name=op.f('fk_component_locations_storage_location_id_storage_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_component_locations')),
    sa.UniqueConstraint('component_id', 'storage_location_id', name='uq_component_location')
    )
    with op.batch_alter_table('component_locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_component_locations_component_id'), ['component_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_component_locations_storage_location_id'), ['storage_location_id'], unique=False)

    op.create_table('component_provider_data',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('provider_id', sa.String(), nullable=False),
    sa.Column('provider_part_id', sa.String(length=255), nullable=False),
    sa.Column('datasheet_url', sa.String(length=1000), nullable=True),
    sa.Column('image_url', sa.String(length=1000), nullable=True),
    sa.Column('specifications_json', sa.JSON(), nullable=True),
    sa.Column('cached_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_component_provider_data_component_id_components')),
    sa.ForeignKeyConstraint(['provider_id'], ['component_data_providers.id'], name=op.f('fk_component_provider_data_provider_id_component_data_providers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_component_provider_data')),
    sa.UniqueConstraint('component_id', 'provider_id', name='uq_component_provider')
    )
    with op.batch_alter_table('component_provider_data', schema=None) as batch_op:
        batch_op.create_index('ix_component_provider_cached_at', ['component_id', 'cached_at'], unique=False)

    op.create_table('component_tags',
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('tag_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_component_tags_component_id_components')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_component_tags_tag_id_tags')),
    sa.PrimaryKeyConstraint('component_id', 'tag_id', name=op.f('pk_component_tags'))
    )
    op.create_table('custom_field_values',
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('field_id', sa.String(), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_custom_field_values_component_id_components')),
    sa.ForeignKeyConstraint(['field_id'], ['custom_fields.id'], name=op.f('fk_custom_field_values_field_id_custom_fields')),
    sa.PrimaryKeyConstraint('component_id', 'field_id', name=op.f('pk_custom_field_values'))
    )
    op.create_table('kicad_library_data',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('symbol_library', sa.String(length=255), nullable=True),
    sa.Column('symbol_name', sa.String(length=255), nullable=True),
    sa.Column('footprint_library', sa.String(length=255), nullable=True),
    sa.Column('footprint_name', sa.String(length=255), nullable=True),
    sa.Column('model_3d_path', sa.Text(), nullable=True),
    sa.Column('custom_symbol_file_path', sa.Text(), nullable=True),
    sa.Column('custom_footprint_file_path', sa.Text(), nullable=True),
    sa.Column('custom_3d_model_file_path', sa.Text(), nullable=True),
    sa.Column('symbol_source', sa.Enum('CUSTOM', 'PROVIDER', 'AUTO_GENERATED', name='kicaddatasource'), nullable=False),
    sa.Column('footprint_source', sa.Enum('CUSTOM', 'PROVIDER', 'AUTO_GENERATED', name='kicaddatasource'), nullable=False),
    sa.Column('model_3d_source', sa.Enum('CUSTOM', 'PROVIDER', 'AUTO_GENERATED', name='kicaddatasource'), nullable=False),
    sa.Column('symbol_updated_at', sa.DateTime(), nullable=True),
    sa.Column('footprint_updated_at', sa.DateTime(), nullable=True),
    sa.Column('model_3d_updated_at', sa.DateTime(), nullable=True),
    sa.Column('kicad_fields_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_kicad_library_data_component_id_components')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kicad_library_data')),
    sa.UniqueConstraint('component_id', name=op.f('uq_kicad_library_data_component_id'))
    )
    op.create_table('meta_part_components',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('meta_part_id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('quantity_required', sa.Integer(), nullable=False),
    sa.Column('assembly_notes', sa.Text(), nullable=True),
    sa.Column('reference_designators', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_meta_part_components_component_id_components')),
    sa.ForeignKeyConstraint(['meta_part_id'], ['meta_parts.id'], name=op.f('fk_meta_part_components_meta_part_id_meta_parts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meta_part_components')),
    sa.UniqueConstraint('meta_part_id', 'component_id', name='uq_meta_part_component')
    )
    op.create_table('project_components',
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('quantity_allocated', sa.Integer(), nullable=False),
    sa.Column('quantity_used', sa.Integer(), nullable=False),
    sa.Column('quantity_reserved', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('designator', sa.String(length=50), nullable=True),
    sa.Column('unit_cost_at_allocation', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('total_cost_allocated', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('allocated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_project_components_component_id_components')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_components_project_id_projects')),
    sa.PrimaryKeyConstraint('project_id', 'component_id', name=op.f('pk_project_components'))
    )
    op.create_table('purchase_items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('purchase_id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('supplier_part_number', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_purchase_items_component_id_components')),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], name=op.f('fk_purchase_items_purchase_id_purchases')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase_items'))
    )
    op.create_table('stock_transactions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('transaction_type', sa.Enum('ADD', 'REMOVE', 'MOVE', 'ADJUST', name='transactiontype'), nullable=False),
    sa.Column('quantity_change', sa.Integer(), nullable=False),
    sa.Column('previous_quantity', sa.Integer(), nullable=False),
    sa.Column('new_quantity', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('reference_id', sa.String(), nullable=True),
    sa.Column('reference_type', sa.String(length=50), nullable=True),
    sa.Column('from_location_id', sa.String(), nullable=True),
    sa.Column('to_location_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('user_name', sa.String(length=100), nullable=True),
    sa.Column('batch_id', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_stock_transactions_component_id_components')),
    sa.ForeignKeyConstraint(['from_location_id'], ['storage_locations.id'], name=op.f('fk_stock_transactions_from_location_id_storage_locations')),
    sa.ForeignKeyConstraint(['to_location_id'], ['storage_locations.id'], name=op.f('fk_stock_transactions_to_location_id_storage_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_transactions'))
    )
    op.create_table('substitutes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('substitute_component_id', sa.String(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('compatibility_rating', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.id'], name=op.f('fk_substitutes_component_id_components')),
    sa.ForeignKeyConstraint(['substitute_component_id'], ['components.id'], name=op.f('fk_substitutes_substitute_component_id_components')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_substitutes'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('substitutes')
    op.drop_table('stock_transactions')
    op.drop_table('purchase_items')
    op.drop_table('project_components')
    op.drop_table('meta_part_components')
    op.drop_table('kicad_library_data')
    op.drop_table('custom_field_values')
    op.drop_table('component_tags')
    with op.batch_alter_table('component_provider_data', schema=None) as batch_op:
        batch_op.drop_index('ix_component_provider_cached_at')

    op.drop_table('component_provider_data')
    with op.batch_alter_table('component_locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_component_locations_storage_location_id'))
        batch_op.drop_index(batch_op.f('ix_component_locations_component_id'))

    op.drop_table('component_locations')
    op.drop_table('attachments')
    op.drop_table('purchases')
    with op.batch_alter_table('components', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_components_provider_sku'))
        batch_op.drop_index(batch_op.f('ix_components_part_number'))
        batch_op.drop_index(batch_op.f('ix_components_name'))
        batch_op.drop_index(batch_op.f('ix_components_manufacturer_part_number'))
        batch_op.drop_index(batch_op.f('ix_components_manufacturer'))
        batch_op.drop_index(batch_op.f('ix_components_local_part_id'))
        batch_op.drop_index(batch_op.f('ix_components_component_type'))
        batch_op.drop_index(batch_op.f('ix_components_barcode_id'))

    op.drop_table('components')
    op.drop_table('api_tokens')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_name'))

    op.drop_table('tags')
    op.drop_table('suppliers')
    with op.batch_alter_table('storage_locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_storage_locations_qr_code_id'))
        batch_op.drop_index(batch_op.f('ix_storage_locations_name'))
        batch_op.drop_index(batch_op.f('ix_storage_locations_location_hierarchy'))
        batch_op.drop_index(batch_op.f('ix_storage_locations_location_code'))

    op.drop_table('storage_locations')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_projects_name'))

    op.drop_table('projects')
    with op.batch_alter_table('meta_parts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_meta_parts_name'))

    op.drop_table('meta_parts')
    with op.batch_alter_table('custom_fields', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_custom_fields_name'))

    op.drop_table('custom_fields')
    op.drop_table('component_data_providers')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_name'))

    op.drop_table('categories')
    # ### end Alembic commands ###